# Railway Production Configuration - Fast startup with PostgreSQL
server.port=${PORT:8080}
server.servlet.context-path=/

# Database Configuration - Railway PostgreSQL (automatically provided)
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:fallback}
spring.datasource.username=${PGUSER:sa}
spring.datasource.password=${PGPASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Fast startup configuration - CRITICAL for Railway health checks
spring.main.lazy-initialization=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.open-in-view=false

# Connection Pool Settings - Optimized for fast startup
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.initialization-fail-timeout=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration for PostgreSQL - Auto-create tables
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Prevent startup failure on DB connection issues
spring.datasource.continue-on-error=true
spring.sql.init.continue-on-error=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# SSL Configuration for Railway - Flexible
spring.datasource.hikari.data-source-properties.sslmode=prefer
spring.datasource.hikari.data-source-properties.prepareThreshold=0

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Management endpoints - Simplified for Railway health checks
management.endpoints.enabled-by-default=false
management.endpoint.health.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never
management.health.db.enabled=false
management.health.datasource.enabled=false

# Logging Configuration
logging.level.root=WARN
logging.level.com.styler=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Application Configuration
styler.app.name=Styler E-commerce Backend
styler.app.version=1.0.0
styler.app.mode=railway-production